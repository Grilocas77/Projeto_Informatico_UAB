# ============================================================
# tradutor_local.py - Duarte Grilo 2201320 - Projeto InformÃ¡tico
# ============================================================
# Objetivo:
# ðŸ”¹ TraduÃ§Ã£o automÃ¡tica local entre PortuguÃªs e InglÃªs (PT â‡„ EN)
# ðŸ”¹ Utiliza modelos MarianMT da HuggingFace, carregados via config.py
# ðŸ”¹ Evita dependÃªncia de APIs externas, garantindo privacidade e performance
# ðŸ”¹ Fornece funÃ§Ãµes especÃ­ficas e genÃ©ricas para traduÃ§Ã£o unidirecional e bidirecional
# ============================================================

from config import TRADUTOR_MODELOS


# === FunÃ§Ãµes de TraduÃ§Ã£o ===

def traduzir_pt_para_en(texto: str) -> str:
    """
    Traduz uma frase do PortuguÃªs para o InglÃªs usando modelo MarianMT.

    Args:
        texto (str): Frase ou parÃ¡grafo em portuguÃªs.

    Returns:
        str: TraduÃ§Ã£o em inglÃªs.
    """
    tokenizer = TRADUTOR_MODELOS["pt-en"]["tokenizer"]
    model = TRADUTOR_MODELOS["pt-en"]["model"]
    inputs = tokenizer([texto], return_tensors="pt", padding=True)
    translated = model.generate(**inputs)
    return tokenizer.decode(translated[0], skip_special_tokens=True)


def traduzir_en_para_pt(texto: str) -> str:
    """
    Traduz uma frase do InglÃªs para o PortuguÃªs usando modelo MarianMT.

    Args:
        texto (str): Frase ou parÃ¡grafo em inglÃªs.

    Returns:
        str: TraduÃ§Ã£o em portuguÃªs.
    """
    tokenizer = TRADUTOR_MODELOS["en-pt"]["tokenizer"]
    model = TRADUTOR_MODELOS["en-pt"]["model"]
    inputs = tokenizer([texto], return_tensors="pt", padding=True)
    translated = model.generate(**inputs)
    return tokenizer.decode(translated[0], skip_special_tokens=True)


def traduzir(texto: str, origem: str = "pt", destino: str = "en") -> str:
    """
    FunÃ§Ã£o genÃ©rica para traduzir entre PortuguÃªs e InglÃªs, com autodetecÃ§Ã£o de direÃ§Ã£o.

    Args:
        texto (str): Texto a traduzir.
        origem (str): CÃ³digo do idioma de origem ('pt' ou 'en').
        destino (str): CÃ³digo do idioma de destino ('pt' ou 'en').

    Returns:
        str: Texto traduzido no idioma desejado.

    Raises:
        ValueError: Se a combinaÃ§Ã£o de idiomas for invÃ¡lida.
    """
    if origem == "pt" and destino == "en":
        return traduzir_pt_para_en(texto)
    elif origem == "en" and destino == "pt":
        return traduzir_en_para_pt(texto)
    else:
        raise ValueError(f"TraduÃ§Ã£o nÃ£o suportada: '{origem}' -> '{destino}'. Use 'pt' ou 'en'.")
