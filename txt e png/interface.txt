üìÅ interface.py ‚Äì Interface Gr√°fica com Tkinter
üìå Fun√ß√£o no Projeto
Este m√≥dulo fornece uma interface gr√°fica local, acess√≠vel para utilizadores menos t√©cnicos (estudantes, docentes). √â uma alternativa visual √† CLI, com bot√µes, menus e acesso facilitado a fun√ß√µes.

üß© Componentes e Funcionalidades
1. Iniciar Interfaces
Permite lan√ßar:

A interface de linha de comandos (cli_interface.py)

O bot do Discord (caso exista)

Scripts de teste e m√©tricas

2. Gest√£o da Biblioteca RAG
Acede ao RAGLibraryManager para atualizar a base vetorial (rag_library_manager.py)

Mostra o progresso da reconstru√ß√£o (opcional)

3. Acesso a Ficheiros
Abre com um clique:

Hist√≥rico de respostas (velvet_respostas.json)

Relat√≥rios CSV e logs

Painel de configura√ß√µes (paths, prefer√™ncias)

4. Interface Multilingue e Ajuda
Mensagens e labels organizados via dicion√°rio STRINGS

Bot√£o de ajuda abre uma janela com explica√ß√µes e links √∫teis

üß† Integra√ß√£o no Fluxo Velvet
Embora interface.py n√£o chame diretamente o modelo Velvet, ele executa scripts que sim:

chatbot_controller.py via CLI

test_request.py, metrics_controller.py para an√°lises

Atua como painel de controlo central do sistema, sendo particularmente √∫til em demonstra√ß√µes e defesa do projeto.

‚úÖ Fun√ß√µes-Chave
Fun√ß√£o	Prop√≥sito
executar_script()	Lan√ßa scripts externos (CLI, m√©tricas, testes)
RAGLibraryManager()	Permite rebuild/atualiza√ß√£o da base vetorial
mostrar_erro() / mostrar_info()	Di√°logos amig√°veis ao utilizador
abrir_ajuda()	Documenta√ß√£o do projeto e cr√©ditos autorais

üìå Justifica√ß√£o Tecnol√≥gica
Componente	Justifica√ß√£o
Tkinter	Simples, nativo em Python, ideal para prot√≥tipos
PIL (ImageTk)	Suporte visual (logotipo, imagens)
Subprocess	Integra√ß√£o com scripts externos de forma controlada
JSON Config	Personaliza√ß√£o do ambiente sem alterar c√≥digo

üöÄ Benef√≠cios para o Projeto
Acessibilidade: qualquer pessoa pode usar o chatbot sem conhecer Python

Centraliza√ß√£o: tudo num s√≥ local: m√©tricas, testes, respostas

Facilidade de defesa: demonstra√ß√£o clara e profissional

Modularidade: altera√ß√µes nos scripts n√£o afetam a GUI

