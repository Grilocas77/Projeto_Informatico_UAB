üìÅ config.py ‚Äì Configura√ß√£o Global do Sistema
üìå Fun√ß√£o no Projeto
Este m√≥dulo define e centraliza:

Caminhos para ficheiros e diret√≥rios

Modelos usados no pipeline (LLM, embeddings, tradu√ß√£o, reranker)

Par√¢metros t√©cnicos (tokens, temperatura, top_k, etc.)

Tokens de autentica√ß√£o (ex: HuggingFace, Discord)

üß© Componentes Chave
1. Paths e Diret√≥rios

DOCUMENTS_PATH = "data/documents"
CHROMA_PATH = "embeddings_db/chroma_db"
Define onde est√£o os documentos para RAG e onde guardar a base vetorial

2. Modelos Utilizados

EMBEDDING_MODEL = "intfloat/e5-large-v2"
RERANKER_MODEL = "cross-encoder/ms-marco-MiniLM-L-6-v2"
VELVET_MODEL = "Almawave/Velvet-2B"
Modelos HuggingFace utilizados nos diferentes m√≥dulos:

e5-large-v2 para embeddings

CrossEncoder para reranking

Velvet-2B para gera√ß√£o

3. Par√¢metros de Gera√ß√£o

VELVET_PARAMS = {
    "max_new_tokens": 300,
    "temperature": 0.3,
    "top_p": 0.8,
    "repetition_penalty": 1.2
}
Controlam a sa√≠da do Velvet (respostas mais curtas, focadas e repet√≠veis)

4. Modelos de Tradu√ß√£o MarianMT
python
Copiar
Editar
TRADUTOR_MODELOS = {
    "pt-en": {"tokenizer": ..., "model": ...},
    "en-pt": {"tokenizer": ..., "model": ...}
}
Modelos MarianMT carregados localmente para tradu√ß√£o bidirecional

5. Vari√°veis de Ambiente
python
Copiar
Editar
HF_TOKEN = os.getenv("HF_TOKEN")
DISCORD_BOT_TOKEN = os.getenv("DISCORD_BOT_TOKEN")
Permite armazenar os tokens de forma segura fora do c√≥digo

üß† Integra√ß√£o no Fluxo Velvet
Todos os m√≥dulos t√©cnicos do projeto dependem de config.py:

velvet_runner.py usa o VELVET_MODEL e os VELVET_PARAMS

rag_engine.py e rag_library_manager.py usam EMBEDDING_MODEL e CHROMA_PATH

tradutor_local.py importa os TRADUTOR_MODELOS

Desta forma, qualquer altera√ß√£o de modelo ou par√¢metro exige modifica√ß√£o apenas neste ficheiro.

üìå Justifica√ß√£o Tecnol√≥gica
Escolha	Justifica√ß√£o
Centraliza√ß√£o da configura√ß√£o	Evita repeti√ß√£o e facilita manuten√ß√£o
Modelos HuggingFace	Vers√°teis, treinados, eficientes e com suporte comunit√°rio
.env (vari√°veis de ambiente)	Seguran√ßa e boas pr√°ticas na gest√£o de tokens

üöÄ Benef√≠cios para o Projeto
Facilidade de altera√ß√£o de modelos ou par√¢metros

Padroniza√ß√£o de caminhos e defini√ß√µes

Escalabilidade: permite mudar modelos sem mexer em 10 ficheiros

Organiza√ß√£o profissional e alinhada com projetos reais

Este m√≥dulo √© o ponto de personaliza√ß√£o principal do projeto. Para futuras melhorias, basta atualizar o config.py para adaptar o sistema a novas tarefas, modelos ou documentos.